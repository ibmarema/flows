{
    "id": "ceb4606e.993d7",
    "label": "NAB Demo",
    "nodes": [
        {
            "id": "16cbe597.bc4072",
            "type": "inject",
            "z": "ceb4606e.993d7",
            "name": "Start Workflow",
            "topic": "",
            "payload": "",
            "payloadType": "str",
            "repeat": "",
            "crontab": "",
            "once": false,
            "x": 189,
            "y": 162.71441650390625,
            "wires": [
                [
                    "d3feb249.62e5a"
                ]
            ]
        },
        {
            "id": "edf17bc3.ca2c48",
            "type": "job_start",
            "z": "ceb4606e.993d7",
            "name": "nab_demo",
            "title": "NAB Demo",
            "jobtype": "demo_bluemix",
            "priority": "500",
            "starttime": "",
            "startbatch": "",
            "endbatch": "",
            "searchTag1": "",
            "searchTag2": "",
            "searchTag3": "",
            "searchTagInt1": "",
            "searchTagInt2": "",
            "searchTagInt3": "",
            "searchTagDate1": "",
            "searchTagDate2": "",
            "searchTagDate3": "",
            "x": 555.0713920593262,
            "y": 203.14298820495605,
            "wires": [
                [
                    "f0a21e27.f93db8",
                    "1f5dad6e.75eb83"
                ]
            ]
        },
        {
            "id": "16543b9e.c8b3ac",
            "type": "job_end",
            "z": "ceb4606e.993d7",
            "includeparameters": true,
            "eojtag": "",
            "x": 2360.3571243286133,
            "y": 404.1429786682129,
            "wires": [
                [
                    "97c41c76.f11168",
                    "57954e8.f0f1ab"
                ]
            ]
        },
        {
            "id": "57954e8.f0f1ab",
            "type": "job_send",
            "z": "ceb4606e.993d7",
            "holdjob": false,
            "url": "http://localhost:9090",
            "system": "admira",
            "user": "dmae",
            "password": "b027ef6677441cd784e7b6c9f8ebae788d22",
            "encrypted": true,
            "x": 2647.3571243286133,
            "y": 444.1429786682129,
            "wires": [
                [
                    "b51e05ff.17c38"
                ]
            ]
        },
        {
            "id": "b51e05ff.17c38",
            "type": "debug",
            "z": "ceb4606e.993d7",
            "name": "",
            "active": true,
            "console": "false",
            "complete": "false",
            "x": 2862.3571243286133,
            "y": 447.1429786682129,
            "wires": []
        },
        {
            "id": "88bc27d6.b7a91",
            "type": "flow-reader",
            "z": "ceb4606e.993d7",
            "name": "Save Flow to GitHub",
            "protocol": "http",
            "url": "127.0.0.1:1880",
            "sheet": "NAB Demo",
            "auth": false,
            "once": false,
            "x": 263.71431732177734,
            "y": 78,
            "wires": [
                [
                    "7e3db4d0.0ccb04"
                ]
            ]
        },
        {
            "id": "7e3db4d0.0ccb04",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "Set commit message",
            "func": "// the commit message has to be enclosed in \" and \\\"\n\nmsg.commit = \"\\\"my commit message 3\\\"\";\n\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 561.2142944335938,
            "y": 74.5,
            "wires": [
                [
                    "e53e0566.3829b"
                ]
            ]
        },
        {
            "id": "f0a21e27.f93db8",
            "type": "debug",
            "z": "ceb4606e.993d7",
            "name": "",
            "active": false,
            "console": "false",
            "complete": "true",
            "x": 736.3571243286133,
            "y": 165.1429786682129,
            "wires": []
        },
        {
            "id": "1f5dad6e.75eb83",
            "type": "job_vars",
            "z": "ceb4606e.993d7",
            "name": "Constants",
            "vartype": "variable",
            "variables": [
                {
                    "k": "orgunit",
                    "v": "admira"
                },
                {
                    "k": "upload_base_dir",
                    "v": "/home/dmae"
                },
                {
                    "k": "cache_dir",
                    "v": "/home/dmae/admira/cache"
                },
                {
                    "k": "ecsi_self_host",
                    "v": "localhost"
                },
                {
                    "k": "ecsi_self_user",
                    "v": "dmae"
                },
                {
                    "k": "ecsi_self_password",
                    "v": "b027ef6677441cd784e7b6c9f8ebae788d22"
                },
                {
                    "k": "nodered_self_host",
                    "v": "localhost"
                }
            ],
            "x": 747.5000305175781,
            "y": 262.5715208053589,
            "wires": [
                [
                    "a216b66b.3d3a1"
                ]
            ]
        },
        {
            "id": "97c41c76.f11168",
            "type": "debug",
            "z": "ceb4606e.993d7",
            "name": "",
            "active": true,
            "console": "false",
            "complete": "false",
            "x": 2568.3571243286133,
            "y": 355.1429786682129,
            "wires": []
        },
        {
            "id": "d3feb249.62e5a",
            "type": "template",
            "z": "ceb4606e.993d7",
            "name": "XML",
            "field": "payload",
            "fieldType": "msg",
            "format": "handlebars",
            "template": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<admira version=\"2.2.0\" type=\"variables\">\n\t<properties id=\"template_variables\">\n\t\t<param name=\"sequence_name\">Name_of_Sequence 123</param>\n\t\t<param name=\"material_type\">Clips</param>\n\t\t<param name=\"remark\">Remarks</param>\n\t\t<param name=\"redaktion_lang\"/>\n\t\t<param name=\"sendetitel\"/>\n\t\t<param name=\"beitragsname\"/>\n\t\t<param name=\"redakteur\"/>\n\t\t<param name=\"autor\"/>\n\t\t<param name=\"sendedatum\"/>\n\t\t<param name=\"projektname_lang\"/>\n\t\t<param name=\"lookup_performed\">false</param>\n\t\t<param name=\"priority_import\">false</param>\n\t\t<param name=\"avid_transfer\">false</param>\n\t\t<param name=\"type_of_source\">File</param>\n\t\t<param name=\"portal_user_id\">dmae</param>\n\t\t<param name=\"portal_user_first_name\">Max</param>\n\t\t<param name=\"portal_user_last_name\">Mustermann</param>\n\t\t<param name=\"portal_user_roles\">filter_types_edit filter_date_edit filter_text_edit filter_job_description_search filter_other_edit filter_id_edit filter_state_edit job_start job_cancel job_delete job_restart job_delete and job_restart job_prio job_comment job_error_clear job_action_bar job_step_view job_parameter job_diagram_view job_gantt_view job_gannt_view essence_info fm_state_edit fm_dates_edit fm_jobid_edit fm_filename_edit fm_delete_file fm_change_expiration fm_disable_expirtation upload_portlet upload_arema_monitor upload_file upload_p2 upload_xdcam upload_priority dashboard_import system_values_edit user_management edi_registry agent_management agent_pause agent_resume agent_stop agent_delete agent_action_bar agent_step_list agent_parameter avidsendto_portlet avidsendto_arema_monitor avidsendto_priority rules_builder statistics_restore_tape statistics_step_waiting_time statistics_number_and_duration system_values_view job_link task_list task_view hsb_recordtodolist dynamicform_portlet job_logviewer</param>\n\t\t<param name=\"ftp_upload_host\">159.122.4.146:21</param>\n\t\t<param name=\"ftp_upload_user\">dmae</param>\n\t\t<param name=\"ftp_upload_password\">pw4Ar3.mA</param>\n\t\t<param name=\"ftp_upload_base_directory\">/admira/cache/</param>\n\t\t<param name=\"ftp_upload_session_directory\">2016-04-08_20-50-25_608</param>\n\t\t<param name=\"url_hostname\">159.122.4.146:8089</param>\n\t\t<param name=\"portal_site\">portal_site</param>\n\t</properties>\n\t<container>\n\t\t<clips>\n\t\t\t<clip sequence=\"1\">\n\t\t\t\t<videoUri source=\"C:\\DemoFilme\\EDahlias.mp4\" size= \"18862865\" >ftp://dmae:pw4Ar3.mA@159.122.4.146:21/admira/cache/EDahlias.mp4</videoUri>\n\t\t\t</clip>\n\t\t</clips>\n\t</container>\n</admira>",
            "x": 367.357177734375,
            "y": 159.571533203125,
            "wires": [
                [
                    "edf17bc3.ca2c48"
                ]
            ]
        },
        {
            "id": "f2671c78.082fc",
            "type": "copy_to_cache",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "copy_mp4_to_cache",
            "title": "Copy (in tail mode) [$variable.mp4_source_filename] to cache as [$variable.mp4_target_filename]",
            "expected_case": "",
            "source_filename": "$variable.mp4_source_filename",
            "contained_file_list": "",
            "target_filename": "$variable.mp4_target_filename",
            "file_list": "",
            "org_unit": "$variable.orgunit",
            "block_size": "4096",
            "hold_in_cache": "yes",
            "parameters": [
                {
                    "k": "tail_header_size_list",
                    "v": "8000"
                },
                {
                    "k": "transfer_inactivity_timeout",
                    "v": "5"
                },
                {
                    "k": "header_total_waiting_timeout",
                    "v": "5"
                },
                {
                    "k": "tail_full_filename_list",
                    "v": "$variable.mp4_source_filename"
                },
                {
                    "k": "tail_initial_wait_filename_list",
                    "v": "$variable.mp4_source_filename"
                }
            ],
            "x": 1078.3571243286133,
            "y": 186.1429786682129,
            "wires": [
                [
                    "ed94a90f.fa4ce"
                ]
            ]
        },
        {
            "id": "28abec50.b442cc",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "mp4_source_filename",
            "func": "//variable declaration\n\n// videoUri = ftp://dmae:pw4Ar3.mA@159.122.4.146:21/admira/cache/EDahlias.mp4\nvar regex = /^ftp:\\/\\/(.*):(.*)@(.*):(.*)\\/(.*)$/;\n\nvar result = msg.payload.input.videoUri.match(regex);\nvar user = result[1];\nvar pass = result[2];\nvar host = result[3];\nvar port = result[4];\nvar path = result[5];\n\n\n\nvar mp4_source_filename =    \n    msg.payload.variables.upload_base_dir + \n    msg.payload.input.ftp_upload_base_directory + \n    msg.payload.input.ftp_upload_session_directory + \n    \"/\" + \n    path\n    ;\n\n\n// output to debug sidebar\n//node.warn(mp4_source_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.mp4_source_filename = mp4_source_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 728.5714721679688,
            "y": 464.1072692871094,
            "wires": [
                [
                    "7c907e17.0c9a7"
                ]
            ]
        },
        {
            "id": "f9a8d399.8d6e8",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "mp4_target_filename",
            "func": "//variable declaration\nvar mp4_target_filename =\n    \"Demo_VideoRecognition/mp4/\" +\n    msg.payload.variables.mp4_target_filename_name;\n\n\n// output to debug sidebar\n//node.warn(mp4_target_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.mp4_target_filename = mp4_target_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 722.3928833007812,
            "y": 594.7144165039062,
            "wires": [
                [
                    "a7535d19.bf949"
                ]
            ]
        },
        {
            "id": "ed94a90f.fa4ce",
            "type": "access",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "access_mp4",
            "title": "Access of [$variable.mp4_target_filename]",
            "expected_case": "",
            "filename": "$variable.mp4_target_filename",
            "filenames": "",
            "user": "",
            "subfunction": "",
            "virtual_cache": "",
            "cache_timeout": "",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "yes",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 1299.3571701049805,
            "y": 189.85727214813232,
            "wires": [
                [
                    "9bea7c4.773ce8"
                ]
            ]
        },
        {
            "id": "9bea7c4.773ce8",
            "type": "notify",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "create_approval_task_metadata",
            "title": "Creation of task metadata for human approval for imported clip [$input.sequence_name] file [$variable.mp4_target_filename]",
            "expected_case": "",
            "dest_filename": "/home/dmae/admira/etc/Demo_VideoRecognition_Notify_Task_Metadata_Destination.xml",
            "content_filename": "",
            "org_unit": "$variable.orgunit",
            "metadata_essence_": "",
            "fail_on_predecessor_error": "yes",
            "stop_deliver_on_failure": "yes",
            "fail_on_error": "yes",
            "hold_in_cache": "yes",
            "parameters": [],
            "properties": [
                {
                    "k": "priority",
                    "v": "medium"
                },
                {
                    "k": "title",
                    "v": "Watson demo: Approval of uploaded clip [$input.sequence_name]"
                },
                {
                    "k": "access",
                    "v": "o=admira"
                },
                {
                    "k": "form_template",
                    "v": "taskView"
                },
                {
                    "k": "step_name_task_list_entry",
                    "v": "create_approval_task_list_entry"
                },
                {
                    "k": "clip_name",
                    "v": "$input.sequence_name"
                },
                {
                    "k": "material_type",
                    "v": "$input.material_type"
                },
                {
                    "k": "upload_remarks",
                    "v": "$input.remark"
                },
                {
                    "k": "video_filename",
                    "v": "$variable.mp4_target_filename"
                }
            ],
            "x": 1157.642807006836,
            "y": 297.71441555023193,
            "wires": [
                [
                    "c99a0379.0b6f78"
                ]
            ]
        },
        {
            "id": "c99a0379.0b6f78",
            "type": "notify",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "create_approval_task_list_entry",
            "title": "Creation of task list entry for human approval for imported clip  [$input.sequence_name] file [$variable.mp4_target_filename]",
            "expected_case": "",
            "dest_filename": "/home/dmae/admira/etc/Demo_VideoRecognition_Notify_Task_List_Destination.xml",
            "content_filename": "",
            "org_unit": "$variable.orgunit",
            "metadata_essence_": "",
            "fail_on_predecessor_error": "yes",
            "stop_deliver_on_failure": "yes",
            "fail_on_error": "yes",
            "hold_in_cache": "yes",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "priority",
                    "v": "medium"
                },
                {
                    "k": "title",
                    "v": "Watson demo: Approval of uploaded clip [$input.sequence_name]"
                },
                {
                    "k": "access",
                    "v": "o=admira"
                },
                {
                    "k": "form_template",
                    "v": "taskView"
                }
            ],
            "x": 1472.3571319580078,
            "y": 308.14299297332764,
            "wires": [
                [
                    "6d3df364.aaa2e4",
                    "a3793403.b381f8"
                ]
            ]
        },
        {
            "id": "c6a38ae2.092098",
            "type": "switch",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "wait_for_human_task_result",
            "title": "Wait for the result of the human task action and evaluate the result (setting the runtime case accordingly)",
            "expected_case": "",
            "decision_maker": "DecisionTransformation",
            "fail_on_predecessor_error": "yes",
            "fail_on_error": "yes",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "xslt_file",
                    "v": "/home/dmae/admira/etc/Demo_Flow_VideoRecognition_Switch_Human_Task_Wait_Decision.xsl"
                },
                {
                    "k": "step_name_task_list_entry",
                    "v": "create_approval_task_list_entry"
                }
            ],
            "x": 1388.4998245239258,
            "y": 604.1429386138916,
            "wires": [
                [
                    "1fccb40c.a7f904",
                    "18031f6a.f88481",
                    "323bbf0c.254018",
                    "531f8397.1a5c24",
                    "59320825.a7a248",
                    "79e1158d.7b5354",
                    "ac174413.15d6d",
                    "d602e071.761f58"
                ]
            ]
        },
        {
            "id": "9b3ada1.6a6f828",
            "type": "comment",
            "z": "ceb4606e.993d7",
            "name": "Job Titel dynamisch machen",
            "info": "",
            "x": 515.9285507202148,
            "y": 288.42870235443115,
            "wires": []
        },
        {
            "id": "3f4b90d5.9ceda",
            "type": "comment",
            "z": "ceb4606e.993d7",
            "name": "Speichern des Jobs, des XMLs und des Flows",
            "info": "",
            "x": 2963.2139587402344,
            "y": 505.14297008514404,
            "wires": []
        },
        {
            "id": "1fccb40c.a7f904",
            "type": "switch",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "switch_store_cleversafe",
            "title": "Decide if to switch to the workflow branch into store in Cleversafe object storage",
            "expected_case": "approved",
            "decision_maker": "DecisionTransformation",
            "fail_on_predecessor_error": "yes",
            "fail_on_error": "yes",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "xslt_file",
                    "v": "/home/dmae/admira/etc/Demo_Flow_VideoRecognition_Switch_Action_Decision.xsl"
                },
                {
                    "k": "action",
                    "v": "storeCleversafe"
                },
                {
                    "k": "step_name_task_list_entry",
                    "v": "create_approval_task_list_entry"
                }
            ],
            "x": 1060.357177734375,
            "y": 1145.1430053710938,
            "wires": [
                [
                    "cf3979b2.1464d8"
                ]
            ]
        },
        {
            "id": "18031f6a.f88481",
            "type": "switch",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "switch_store_Amazon",
            "title": "Decide if to switch to the workflow branch to store into Amazon S3 object storage",
            "expected_case": "approved",
            "decision_maker": "DecisionTransformation",
            "fail_on_predecessor_error": "yes",
            "fail_on_error": "yes",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "xslt_file",
                    "v": "/home/dmae/admira/etc/Demo_Flow_VideoRecognition_Switch_Action_Decision.xsl"
                },
                {
                    "k": "action",
                    "v": "storeAmazon"
                },
                {
                    "k": "step_name_task_list_entry",
                    "v": "create_approval_task_list_entry"
                }
            ],
            "x": 1192.857177734375,
            "y": 1089.14306640625,
            "wires": [
                [
                    "4fe51442.6d3594"
                ]
            ]
        },
        {
            "id": "323bbf0c.254018",
            "type": "switch",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "switch_store_box",
            "title": "Decide if to switch to the workflow branch to store into Box.com storage",
            "expected_case": "approved",
            "decision_maker": "DecisionTransformation",
            "fail_on_predecessor_error": "yes",
            "fail_on_error": "yes",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "xslt_file",
                    "v": "/home/dmae/admira/etc/Demo_Flow_VideoRecognition_Switch_Action_Decision.xsl"
                },
                {
                    "k": "action",
                    "v": "storeBox"
                },
                {
                    "k": "step_name_task_list_entry",
                    "v": "create_approval_task_list_entry"
                }
            ],
            "x": 1702.857177734375,
            "y": 727.1430053710938,
            "wires": [
                [
                    "dd080c2e.652b28"
                ]
            ]
        },
        {
            "id": "531f8397.1a5c24",
            "type": "switch",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "switch_perform_visualrecognition",
            "title": "Decide if to switch to the workflow branch to perform Watson Visual Recogition",
            "expected_case": "approved",
            "decision_maker": "DecisionTransformation",
            "fail_on_predecessor_error": "yes",
            "fail_on_error": "yes",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "xslt_file",
                    "v": "/home/dmae/admira/etc/Demo_Flow_VideoRecognition_Switch_Action_Decision.xsl"
                },
                {
                    "k": "action",
                    "v": "checkVisualRecognition"
                },
                {
                    "k": "step_name_task_list_entry",
                    "v": "create_approval_task_list_entry"
                }
            ],
            "x": 761.857177734375,
            "y": 1353.6430559158325,
            "wires": [
                [
                    "a289359f.49e8f8"
                ]
            ]
        },
        {
            "id": "59320825.a7a248",
            "type": "switch",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "switch_perform_fraunhofer_de",
            "title": "Decide if to switch to the workflow branch to perm Speech2Test using Fraunhofer Audio Mining (German)",
            "expected_case": "approved",
            "decision_maker": "DecisionTransformation",
            "fail_on_predecessor_error": "yes",
            "fail_on_error": "yes",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "xslt_file",
                    "v": "/home/dmae/admira/etc/Demo_Flow_VideoRecognition_Switch_Action_Decision.xsl"
                },
                {
                    "k": "action",
                    "v": "checkFraunhoferDE"
                },
                {
                    "k": "step_name_task_list_entry",
                    "v": "create_approval_task_list_entry"
                }
            ],
            "x": 512.1071472167969,
            "y": 1546.14306640625,
            "wires": [
                [
                    "167f0ae1.14a535"
                ]
            ]
        },
        {
            "id": "dd080c2e.652b28",
            "type": "nop",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "nop_box",
            "title": "NOP Box.com",
            "expected_case": "storeBox",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 1969.857177734375,
            "y": 725.1430053710938,
            "wires": [
                [
                    "16543b9e.c8b3ac"
                ]
            ]
        },
        {
            "id": "aa147ab3.121d7",
            "type": "ecsi_client",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "send_visualrecog_subjob",
            "title": "Send subjob to Import into Media AREMA Portal on [arema.media.ibmcloud.com] with parameters from [$variable.visualrecog_subjob_params_filename]",
            "expected_case": "checkVisualRecognition",
            "subfunction": "startTemplateJob",
            "primary_ecsi_url": "http://arema.media.ibmcloud.com:9090/ecsi/services/admirafunctions",
            "secondary_ecsi_url": "http://arema.media.ibmcloud.com:9090/ecsi/services/admirafunctions",
            "remote_userid": "dmae",
            "remote_password": "b027ef6677441cd784e7b6c9f8ebae788d22",
            "remote_database": "admira",
            "template_filename": "/home/dmae/admira/etc/templates-ev/Demo_Flow_VisualRecognition_Import_MediaPortal.xsl",
            "template_variables_filename": "/home/dmae/admira/cache/$variable.visualrecog_subjob_params_filename",
            "filename": "",
            "mode_synchronous": "yes",
            "fail_on_error": "yes",
            "timeout": "",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 3784.3572006225586,
            "y": 1373.642900466919,
            "wires": [
                [
                    "16543b9e.c8b3ac"
                ]
            ]
        },
        {
            "id": "a5c71adc.ca3de8",
            "type": "notify",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "create_parameters_for_visualregoc_subjob",
            "title": "Create parameters for Visual Recognition subjob into file [$variable.visualrecog_subjob_params_filename]",
            "expected_case": "checkVisualRecognition",
            "dest_filename": "/home/dmae/admira/etc/Demo_Flow_VideoRecognition_Notify_VisualRecog_Subjob_Destination.xml",
            "content_filename": "",
            "org_unit": "$variable.orgunit",
            "metadata_essence_": "",
            "fail_on_predecessor_error": "yes",
            "stop_deliver_on_failure": "yes",
            "fail_on_error": "yes",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "target_filename",
                    "v": "$variable.visualrecog_subjob_params_filename"
                }
            ],
            "properties": [
                {
                    "k": "xml_filename",
                    "v": "$variable.visualrecog_subjob_params_filename"
                },
                {
                    "k": "step_name_task_list_entry",
                    "v": "create_approval_task_list_entry"
                },
                {
                    "k": "clip_name",
                    "v": "$input.sequence_name"
                },
                {
                    "k": "material_type",
                    "v": "$input.material_type"
                },
                {
                    "k": "upload_remarks",
                    "v": "$input.remark"
                },
                {
                    "k": "video_filename",
                    "v": "$variable.mp4_target_filename"
                },
                {
                    "k": "kfi_filename",
                    "v": "$variable.kfi_target_filename"
                },
                {
                    "k": "kfd_filename",
                    "v": "$variable.kfd_target_filename"
                },
                {
                    "k": "solr_filename",
                    "v": "$variable.solr_target_filename"
                }
            ],
            "x": 3457.3572006225586,
            "y": 1374.642900466919,
            "wires": [
                [
                    "aa147ab3.121d7"
                ]
            ]
        },
        {
            "id": "8d9f1885.43b12",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "visualrecog_subjob_params_filename",
            "func": "//variable declaration\nvar visualrecog_subjob_params_filename =\n    \"Demo_VideoRecognition/xml/\" +\n    \"visualrecog_subjob_params\" + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \".xml\";\n\n\n// output to debug sidebar\n//node.warn(visualrecog_subjob_params_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.visualrecog_subjob_params_filename = visualrecog_subjob_params_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 3075.8572006225586,
            "y": 1374.642900466919,
            "wires": [
                [
                    "a5c71adc.ca3de8"
                ]
            ]
        },
        {
            "id": "f38e47df.a9b79",
            "type": "edi_generic_ftp",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "transfer_mp4",
            "title": "Transfer MP4 file [$variable.mp4_target_filename] to media Portal on [arema.media.ibmcloud.com]",
            "expected_case": "checkVisualRecognition",
            "direction": "",
            "device_name": "media_portal",
            "input_pipe": "",
            "output_pipe": "",
            "usecase": "PUT_FILE",
            "source_filename": "$variable.mp4_target_filename",
            "target_filename": "admira/cache/$variable.mp4_target_filename",
            "org_unit": "$variable.orgunit",
            "login_tries": "",
            "device_retry_order": "",
            "overwrite": "yes",
            "force_unsecure_overwrite": "",
            "ftp_connect_mode": "passive",
            "enable_noncritical_errors": "",
            "chmod_file": "",
            "new_remote_directory": "",
            "remove_remote_directory": "",
            "max_transfer_speed": "",
            "start_frame": "",
            "transfer_size": "",
            "transfer_mode": "",
            "mobid": "",
            "source_mobid": "",
            "format_definition": "",
            "storage_location": "",
            "storage_location_longgop": "",
            "interplay_ws_timeout": "",
            "interplay_tm_device": "",
            "interplay_tm_max_retry": "",
            "media_services_output_filepath": "",
            "avid_priority": "",
            "audio_bit_depth": "",
            "audio_sample_rate": "",
            "transfer_buffer_size": "",
            "network_buffer_size": "",
            "encoding": "",
            "keep_alive_sleep_time": "",
            "device_max_retry": "",
            "source_filename_remote": "",
            "target_filename_remote": "",
            "checksum_algorithm": "",
            "checksum_metadata_field": "",
            "checksum_file": "",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 2803.3572006225586,
            "y": 1281.642900466919,
            "wires": [
                [
                    "8d9f1885.43b12"
                ]
            ]
        },
        {
            "id": "cb28b649.a41178",
            "type": "edi_generic_ftp",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "transfer_kfi",
            "title": "Transfer MP4 file [$variable.kfi_target_filename] to media Portal on [arema.media.ibmcloud.com]",
            "expected_case": "checkVisualRecognition",
            "direction": "",
            "device_name": "media_portal",
            "input_pipe": "",
            "output_pipe": "",
            "usecase": "PUT_FILE",
            "source_filename": "$variable.kfi_target_filename",
            "target_filename": "admira/cache/$variable.kfi_target_filename",
            "org_unit": "$variable.orgunit",
            "login_tries": "",
            "device_retry_order": "",
            "overwrite": "yes",
            "force_unsecure_overwrite": "",
            "ftp_connect_mode": "",
            "enable_noncritical_errors": "",
            "chmod_file": "",
            "new_remote_directory": "",
            "remove_remote_directory": "",
            "max_transfer_speed": "",
            "start_frame": "",
            "transfer_size": "",
            "transfer_mode": "",
            "mobid": "",
            "source_mobid": "",
            "format_definition": "",
            "storage_location": "",
            "storage_location_longgop": "",
            "interplay_ws_timeout": "",
            "interplay_tm_device": "",
            "interplay_tm_max_retry": "",
            "media_services_output_filepath": "",
            "avid_priority": "",
            "audio_bit_depth": "",
            "audio_sample_rate": "",
            "transfer_buffer_size": "",
            "network_buffer_size": "",
            "encoding": "",
            "keep_alive_sleep_time": "",
            "device_max_retry": "",
            "source_filename_remote": "",
            "target_filename_remote": "",
            "checksum_algorithm": "",
            "checksum_metadata_field": "",
            "checksum_file": "",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 2803.8572006225586,
            "y": 1360.642900466919,
            "wires": [
                [
                    "8d9f1885.43b12"
                ]
            ]
        },
        {
            "id": "a4240079.876898",
            "type": "edi_generic_ftp",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "transfer_kfd",
            "title": "Transfer MP4 file [$variable.kfd_target_filename] to media Portal on [arema.media.ibmcloud.com]",
            "expected_case": "checkVisualRecognition",
            "direction": "",
            "device_name": "media_portal",
            "input_pipe": "",
            "output_pipe": "",
            "usecase": "PUT_FILE",
            "source_filename": "$variable.kfd_target_filename",
            "target_filename": "admira/cache/$variable.kfd_target_filename",
            "org_unit": "$variable.orgunit",
            "login_tries": "",
            "device_retry_order": "",
            "overwrite": "yes",
            "force_unsecure_overwrite": "",
            "ftp_connect_mode": "",
            "enable_noncritical_errors": "",
            "chmod_file": "",
            "new_remote_directory": "",
            "remove_remote_directory": "",
            "max_transfer_speed": "",
            "start_frame": "",
            "transfer_size": "",
            "transfer_mode": "",
            "mobid": "",
            "source_mobid": "",
            "format_definition": "",
            "storage_location": "",
            "storage_location_longgop": "",
            "interplay_ws_timeout": "",
            "interplay_tm_device": "",
            "interplay_tm_max_retry": "",
            "media_services_output_filepath": "",
            "avid_priority": "",
            "audio_bit_depth": "",
            "audio_sample_rate": "",
            "transfer_buffer_size": "",
            "network_buffer_size": "",
            "encoding": "",
            "keep_alive_sleep_time": "",
            "device_max_retry": "",
            "source_filename_remote": "",
            "target_filename_remote": "",
            "checksum_algorithm": "",
            "checksum_metadata_field": "",
            "checksum_file": "",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 2801.8572006225586,
            "y": 1423.642900466919,
            "wires": [
                [
                    "8d9f1885.43b12"
                ]
            ]
        },
        {
            "id": "ab9af8f5.8c874",
            "type": "edi_generic_ftp",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "transfer_solr",
            "title": "Transfer MP4 file [$variable.solr_target_filename] to media Portal on [arema.media.ibmcloud.com]",
            "expected_case": "checkVisualRecognition",
            "direction": "",
            "device_name": "media_portal",
            "input_pipe": "",
            "output_pipe": "",
            "usecase": "PUT_FILE",
            "source_filename": "$variable.solr_target_filename",
            "target_filename": "admira/cache/$variable.solr_target_filename",
            "org_unit": "$variable.orgunit",
            "login_tries": "",
            "device_retry_order": "",
            "overwrite": "yes",
            "force_unsecure_overwrite": "",
            "ftp_connect_mode": "",
            "enable_noncritical_errors": "",
            "chmod_file": "",
            "new_remote_directory": "",
            "remove_remote_directory": "",
            "max_transfer_speed": "",
            "start_frame": "",
            "transfer_size": "",
            "transfer_mode": "",
            "mobid": "",
            "source_mobid": "",
            "format_definition": "",
            "storage_location": "",
            "storage_location_longgop": "",
            "interplay_ws_timeout": "",
            "interplay_tm_device": "",
            "interplay_tm_max_retry": "",
            "media_services_output_filepath": "",
            "avid_priority": "",
            "audio_bit_depth": "",
            "audio_sample_rate": "",
            "transfer_buffer_size": "",
            "network_buffer_size": "",
            "encoding": "",
            "keep_alive_sleep_time": "",
            "device_max_retry": "",
            "source_filename_remote": "",
            "target_filename_remote": "",
            "checksum_algorithm": "",
            "checksum_metadata_field": "",
            "checksum_file": "",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 2798.8572006225586,
            "y": 1494.642900466919,
            "wires": [
                [
                    "8d9f1885.43b12"
                ]
            ]
        },
        {
            "id": "2b826c91.c03384",
            "type": "external_command",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "keyframe",
            "name": "generate_keyframes",
            "title": "Generate keyframes of [$variable.mp4_target_filename]",
            "expected_case": "checkVisualRecognition",
            "exec_name": "/home/dmae/admira/bin/create_keyframe.pl",
            "source_filenames": "$variable.mp4_target_filename",
            "target_filenames": "$variable.kfd_temp_filename",
            "additional_parameters": "",
            "org_unit": "$variable.orgunit",
            "chmod_file": "",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 1391.392822265625,
            "y": 1357.5001220703125,
            "wires": [
                [
                    "ca9798cc.ff05d",
                    "31c40086.b07218",
                    "cd897931.776468"
                ]
            ]
        },
        {
            "id": "ca9798cc.ff05d",
            "type": "copy_to_cache",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "copy_kf_data_to_cache",
            "title": "Copy [$variable.kfd_temp_filename] to cache as [$variable.kfd_target_filename]",
            "expected_case": "checkVisualRecognition",
            "source_filename": "$variable.kfd_temp_filename",
            "contained_file_list": "",
            "target_filename": "$variable.kfd_target_filename",
            "file_list": "",
            "org_unit": "$variable.orgunit",
            "block_size": "",
            "hold_in_cache": "yes",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 1745.1072998046875,
            "y": 1318.1430053710938,
            "wires": [
                [
                    "f3443fc.7a975c"
                ]
            ]
        },
        {
            "id": "31c40086.b07218",
            "type": "copy_to_cache",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "copy_kf_index_to_cache",
            "title": "Copy [$variable.kfi_temp_filename] to cache as [$variable.kfi_target_filename]",
            "expected_case": "checkVisualRecognition",
            "source_filename": "$variable.kfi_temp_filename",
            "contained_file_list": "",
            "target_filename": "$variable.kfi_target_filename",
            "file_list": "",
            "org_unit": "$variable.orgunit",
            "block_size": "",
            "hold_in_cache": "yes",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 1761.107177734375,
            "y": 1372.8929443359375,
            "wires": [
                [
                    "f3443fc.7a975c"
                ]
            ]
        },
        {
            "id": "cd897931.776468",
            "type": "copy_to_cache",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "copy_kf_zip_to_cache",
            "title": "Copy [$variable.kfzip_temp_filename] to cache as [$variable.kfzip_target_filename]",
            "expected_case": "checkVisualRecognition",
            "source_filename": "$variable.kfzip_temp_filename",
            "contained_file_list": "",
            "target_filename": "$variable.kfzip_target_filename",
            "file_list": "",
            "org_unit": "$variable.orgunit",
            "block_size": "",
            "hold_in_cache": "yes",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 1740.607177734375,
            "y": 1429.3931884765625,
            "wires": [
                [
                    "f3443fc.7a975c"
                ]
            ]
        },
        {
            "id": "d9805e5b.1d5b28",
            "type": "notify",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "transform_vr_result_for_solr",
            "title": "Generation of [$variable.solr_target_filename] for Solr from Visual Recognition result [$variable.vr_target_filename]",
            "expected_case": "checkVisualRecognition",
            "dest_filename": "/home/dmae/admira/etc/Demo_VideoRecognition_Notify_Solr_Destination.xml",
            "content_filename": "$variable.vr_target_filename",
            "org_unit": "$variable.orgunit",
            "metadata_essence_": "$variable.mp4_target_filename",
            "fail_on_predecessor_error": "yes",
            "stop_deliver_on_failure": "yes",
            "fail_on_error": "yes",
            "hold_in_cache": "yes",
            "parameters": [
                {
                    "k": "target_filename",
                    "v": "$variable.solr_target_filename"
                }
            ],
            "properties": [
                {
                    "k": "xml_filename",
                    "v": "$variable.solr_target_filename"
                },
                {
                    "k": "mainsrcFilename",
                    "v": "$variable.mp4_target_filename"
                },
                {
                    "k": "mainkfifile",
                    "v": "$variable.kfi_target_filename"
                },
                {
                    "k": "filenamewithoutext",
                    "v": "$variable.mp4_label"
                },
                {
                    "k": "completetimestamp",
                    "v": "$variable.timestamp"
                },
                {
                    "k": "essence_description",
                    "v": "$input.sequence_name"
                },
                {
                    "k": "materialtypfromuploadportal",
                    "v": "$input.material_type"
                },
                {
                    "k": "remarksfromuploadportal",
                    "v": "$input.remark"
                },
                {
                    "k": "face_recognition_xml",
                    "v": ""
                },
                {
                    "k": "fraunhofer_xml",
                    "v": "$variable.fraunhofer_result_filename"
                },
                {
                    "k": "task_name",
                    "v": "$input.sequence_name"
                }
            ],
            "x": 2531.785598754883,
            "y": 1372.2143821716309,
            "wires": [
                [
                    "f38e47df.a9b79",
                    "cb28b649.a41178",
                    "a4240079.876898",
                    "ab9af8f5.8c874"
                ]
            ]
        },
        {
            "id": "a216b66b.3d3a1",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "mp4_label",
            "func": "//variable declaration\n\n\n// videoUri = ftp://dmae:pw4Ar3.mA@159.122.4.146:21/admira/cache/EDahlias.mp4\nvar regex = /^ftp:\\/\\/(.*):(.*)@(.*):(.*)\\/(.*)$/;\n\nvar result = msg.payload.input.videoUri.match(regex);\nvar user = result[1];\nvar pass = result[2];\nvar host = result[3];\nvar port = result[4];\nvar path = result[5];\n\n\nvar regex = /^(.*)\\.(.*)$/;\nvar result = path.match(regex);\n\n\nvar mp4_label = result[1];\n//    \"EDahlias\";\n\n\n// output to debug sidebar\n//node.warn(mp4_label);\n\n// add to msg to be passed on\nmsg.payload.variables.mp4_label = mp4_label;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 740.0000076293945,
            "y": 341.5715627670288,
            "wires": [
                [
                    "2eb65ca3.e056f4"
                ]
            ]
        },
        {
            "id": "2eb65ca3.e056f4",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "timestamp",
            "func": "//variable declaration\nvar timestamp =\n    Date.now();\n\n\n// output to debug sidebar\n//node.warn(timestamp);\n\n// add to msg to be passed on\nmsg.payload.variables.timestamp = timestamp;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 735.5715065002441,
            "y": 404.00010776519775,
            "wires": [
                [
                    "28abec50.b442cc"
                ]
            ]
        },
        {
            "id": "79e1158d.7b5354",
            "type": "switch",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "change_stepstate_rejected",
            "title": "Set the step state to warning as the import has not been approved",
            "expected_case": "rejected",
            "decision_maker": "DecisionTransformation",
            "fail_on_predecessor_error": "yes",
            "fail_on_error": "yes",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "xslt_file",
                    "v": "/home/dmae/admira/etc/Demo_VideoRecognition_Switch_Job_State_Rejected.xsl"
                },
                {
                    "k": "step_name_task_list_entry",
                    "v": "create_approval_task_list_entry"
                }
            ],
            "x": 1836.9821243286133,
            "y": 597.8929786682129,
            "wires": [
                [
                    "16543b9e.c8b3ac"
                ]
            ]
        },
        {
            "id": "a289359f.49e8f8",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "kfd_temp_filename",
            "func": "//variable declaration\nvar kfd_temp_filename =\n    \"/home/dmae/admira/\" +\n//    \"cache/\"+\n    \"keyframe_tmp/\" +\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \"/\" + \n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \".data\";\n\n\n// output to debug sidebar\n//node.warn(kfd_temp_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.kfd_temp_filename = kfd_temp_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 1076.0000610351562,
            "y": 1272.3572998046875,
            "wires": [
                [
                    "67f322c0.53ca7c"
                ]
            ]
        },
        {
            "id": "67f322c0.53ca7c",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "kfi_temp_filename",
            "func": "//variable declaration\nvar kfi_temp_filename =\n    \"/home/dmae/admira/\" +\n//    \"cache/\"+\n    \"keyframe_tmp/\" +\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \"/\" + \n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \".kfi\";\n\n\n// output to debug sidebar\n//node.warn(kfi_temp_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.kfi_temp_filename = kfi_temp_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 1078.5000610351562,
            "y": 1342.3572998046875,
            "wires": [
                [
                    "4419239a.9caa44"
                ]
            ]
        },
        {
            "id": "4419239a.9caa44",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "kfzip_temp_filename",
            "func": "//variable declaration\nvar kfzip_temp_filename =\n    \"/home/dmae/admira/\" +\n//    \"cache/\"+\n    \"keyframe_tmp/\" +\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \"/\" + \n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \".zip\";\n\n\n// output to debug sidebar\n//node.warn(kfzip_temp_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.kfzip_temp_filename = kfzip_temp_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 1077.2500610351562,
            "y": 1414.8572998046875,
            "wires": [
                [
                    "2b826c91.c03384"
                ]
            ]
        },
        {
            "id": "853a4028.70f648",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "kfd_target_filename",
            "func": "//variable declaration\nvar kfd_target_filename =\n    \"Demo_VideoRecognition/data/\" +\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \".data\";\n\n\n// output to debug sidebar\n//node.warn(kfd_target_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.kfd_target_filename = kfd_target_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 737.25,
            "y": 813.6072845458984,
            "wires": [
                [
                    "b2c61230.c15e78"
                ]
            ]
        },
        {
            "id": "b2c61230.c15e78",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "kfi_target_filename",
            "func": "//variable declaration\nvar kfi_target_filename =\n    \"Demo_VideoRecognition/data/\" +\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \".kfi\";\n\n\n// output to debug sidebar\n//node.warn(kfi_target_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.kfi_target_filename = kfi_target_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 742.25,
            "y": 874.8572845458984,
            "wires": [
                [
                    "e86e8a10.f2a9c"
                ]
            ]
        },
        {
            "id": "e86e8a10.f2a9c",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "kfzip_target_filename",
            "func": "//variable declaration\nvar kfzip_target_filename =\n    \"Demo_VideoRecognition/data/\" +\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \".zip\";\n\n\n// output to debug sidebar\n//node.warn(kfzip_target_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.kfzip_target_filename = kfzip_target_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 758.5,
            "y": 928.6072845458984,
            "wires": [
                [
                    "e626c862.8dde28"
                ]
            ]
        },
        {
            "id": "6d3df364.aaa2e4",
            "type": "external_command",
            "z": "ceb4606e.993d7",
            "nop": true,
            "tag": "",
            "name": "send_push_message",
            "title": "Send push message to Bluemix for AREMA Event App",
            "expected_case": "",
            "exec_name": "/home/dmae/admira/bin/ec_send_push_message",
            "source_filenames": "",
            "target_filenames": "",
            "additional_parameters": "0815[Sep]Please approve [$input.sequence_name] [Sep]The file [$input.sequence_name] has been uploaded by user $input.portal_user_first_name $input.portal_user_last_name and requires your approval.[Sep]workflow",
            "org_unit": "$variable.orgunit",
            "chmod_file": "",
            "hold_in_cache": "",
            "parameters": [],
            "properties": [],
            "x": 1827.78564453125,
            "y": 312.5001220703125,
            "wires": [
                []
            ]
        },
        {
            "id": "f3443fc.7a975c",
            "type": "rest_client",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "visual_recognition",
            "title": "Visual recognition of [$variable.kfzip_target_filename]",
            "expected_case": "checkVisualRecognition",
            "end_point": "https://gateway.watsonplatform.net/visual-recognition-beta/api/v2/classify",
            "use_case": "POST",
            "media_type": "json",
            "form_type": "multipart",
            "user": "f39e34a3-1a22-49ac-b744-e945bd4de49d",
            "password": "uBZtU4hKigZj",
            "source_filename": "",
            "target_filename": "$variable.vr_target_filename",
            "response_handler": "",
            "step_timeout": "",
            "fail_on_predecessor_error": "yes",
            "fail_on_error": "yes",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "yes",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "version",
                    "v": "2015-12-02"
                },
                {
                    "k": "form_images_file",
                    "v": "$variable.cache_dir/$variable.kfzip_target_filename"
                }
            ],
            "x": 2087,
            "y": 1367.5,
            "wires": [
                [
                    "d9805e5b.1d5b28"
                ]
            ]
        },
        {
            "id": "600191fe.7d96a",
            "type": "comment",
            "z": "ceb4606e.993d7",
            "name": "Konfig",
            "info": "\nUm die AWS SDK Libraries in den Classpath aufzunehmen sind folgende Zeilen \nzu etc/arema_profile hinzuzufügen:\n\nfor jarfile in $ADMIRA_HOME/S3/S3Test/lib/aws/*.jar\ndo\n    CLASSPATH=\"$CLASSPATH:$jarfile\"\ndone\nfor jarfile in $ADMIRA_HOME/S3/S3Test/lib/aws/third-party/*.jar\ndo\n    CLASSPATH=\"$CLASSPATH:$jarfile\"\ndone\n\n----\n\nDatenbankseitig sind jeweils ein Library, Library_Manager und Pool Record \nanzulegen. Die Statements dazu sehen so aus:\n\nINSERT INTO DMAE.LIBRARY_MANAGERS (MANAGER_ID, LIBRARY_MANAGER_NAME, LIBRARY_MANAGER_TYPE, CONF_FILE_NAME, LIBRARY_MOUNT_POINT, HOST_NAME, USER_NAME, PASSWD, LAST_MODIFIED, CREATION_TIMESTAMP) VALUES (DMAE.LIBRARY_MANAGER_ID.NEXTVAL, 'ECS_S3', 3, 'ibmarema2', 's3.eu-central-1.amazonaws.com', 'localhost', 'AKIAJ4CWCOGNIZD5WLRQ', 'L6vjp/1VUWgW2Oji4Ug3IdVy2ElLT2LLqmlxLp96', CURRENT TIMESTAMP, CURRENT TIMESTAMP)\n\nINSERT INTO DMAE.LIBRARIES (LIBRARY_ID, LIBRARY_NAME, LIBRARY_TYPE, TAPE_COUNT, DRIVE_COUNT, LAST_MODIFIED, CREATION_TIMESTAMP) VALUES (DMAE.LIBRARY_ID.NEXTVAL, 'ECS_S3', 's3', 0, 0, CURRENT TIMESTAMP, CURRENT TIMESTAMP)\n\nINSERT INTO DMAE.POOLS (POOL_ID, LIBRARIES_LIBRARY_ID, POOL_NAME, TAPE_COUNT, POOL_TYPE, RULE_PLACEMENT, RULE_ACCESS, SPREAD_TAPE_FRAME, MAX_FREE_SPACE, MIN_FREE_SPACE, TAPE_TYPE, LAST_MODIFIED, CREATION_TIMESTAMP) VALUES (DMAE.POOL_ID.NEXTVAL, (SELECT LIBRARY_ID FROM DMAE.LIBRARIES WHERE LIBRARY_NAME = 'ECS_S3'), 'POOL_ECS_S3', 0, 's3', 'none', 'none', 0, 0, 0, 8, CURRENT TIMESTAMP, CURRENT TIMESTAMP)\n--> Hier ist ein Fehler drinnen: Die Library manager ID muss nich beim Pool eingetragen werden. LIBRARY_MANAGERS_MANAGER_ID\n---\n\nDer put_to_3 Agent bekommt folgende Parameter:\nsource_filename: Essence Name\ntarget_pool: 'ECS_S3'\nobject_name: Target Filename\nmetadata_xml: Pfad zu optionalem Metadata XML, am besten absoluter Pfad außerhalb Cache (mit Cache File hab ich noch nicht getestet)\norg_unit\n\n----\n\nDas Metadata XML sieht wie folgt aus:\n?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<metadata>\n  <param name=\"test-key1\">test-value1</param>\n  <param name=\"test-key2\">test-value2</param>\n  <param name=\"test-key3\">test-value3</param>\n</metadata>\n\nBis dann, \nHenning\n",
            "x": 2464.25,
            "y": 1118,
            "wires": []
        },
        {
            "id": "39570973.8840f6",
            "type": "put_to_s3",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "put_to_amazon",
            "title": "Store file [$variable.mp4_target_filename] via S3 protocol to Amazon S3 as file [$variable.s3_object_name]",
            "expected_case": "storeAmazon",
            "source_filename": "$variable.mp4_target_filename",
            "target_pool": "POOL_ECS_S3",
            "object_name": "$variable.s3_object_name",
            "metadata_xml_file": "",
            "step_timeout": "",
            "fail_on_predecessor_error": "yes",
            "fail_on_error": "yes",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 2592.5,
            "y": 1087,
            "wires": [
                [
                    "16543b9e.c8b3ac"
                ]
            ]
        },
        {
            "id": "a7511f8b.b928d",
            "type": "notify",
            "z": "ceb4606e.993d7",
            "nop": true,
            "tag": "",
            "name": "create_s3_metadata",
            "title": "Creation of metadata to eb attached to file [$variable.s3_object_name] in S3 bucket",
            "expected_case": "storeAmazon",
            "dest_filename": "/home/dmae/admira/etc/Demo_Flow_VideoRecognition_Notify_S3_Metadata_Destination.xml",
            "content_filename": "",
            "org_unit": "$variable.orgunit",
            "metadata_essence_": "",
            "fail_on_predecessor_error": "yes",
            "stop_deliver_on_failure": "yes",
            "fail_on_error": "yes",
            "hold_in_cache": "yes",
            "parameters": [
                {
                    "k": "target_filename",
                    "v": "$variable.s3_xml_filename"
                }
            ],
            "properties": [
                {
                    "k": "priority",
                    "v": "medium"
                },
                {
                    "k": "title",
                    "v": "Watson demo: Approval of uploaded clip [$input.sequence_name]"
                },
                {
                    "k": "access",
                    "v": "o=admira"
                },
                {
                    "k": "form_template",
                    "v": "taskView"
                },
                {
                    "k": "step_name_task_list_entry",
                    "v": "create_approval_task_list_entry"
                },
                {
                    "k": "clip_name",
                    "v": "$input.sequence_name"
                },
                {
                    "k": "material_type",
                    "v": "$input.material_type"
                },
                {
                    "k": "upload_remarks",
                    "v": "$input.remark"
                },
                {
                    "k": "video_filename",
                    "v": "$variable.mp4_target_filename"
                },
                {
                    "k": "xml_filename",
                    "v": "$variable.s3_xml_filename"
                }
            ],
            "x": 2080,
            "y": 1087,
            "wires": [
                [
                    "39570973.8840f6"
                ]
            ]
        },
        {
            "id": "ff00c29e.04a3",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "s3_xml_filename",
            "func": "//variable declaration\nvar s3_xml_filename =\n    \"Demo_VideoRecognition/xml/\" +\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \"_s3_metadata.xml\";\n\n\n// output to debug sidebar\n//node.warn(s3_xml_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.s3_xml_filename = s3_xml_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 1792,
            "y": 1095,
            "wires": [
                [
                    "a7511f8b.b928d"
                ]
            ]
        },
        {
            "id": "91ebb250.a2768",
            "type": "comment",
            "z": "ceb4606e.993d7",
            "name": "Zugang zu S3",
            "info": "\n\nhttps://console.aws.amazon.com/s3/home?region=us-west-2\nuvoigt@de.ibm.com\nwiener6w\n\n",
            "x": 2312.25,
            "y": 1111.5,
            "wires": []
        },
        {
            "id": "4fe51442.6d3594",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "s3_object_name",
            "func": "//variable declaration\nvar s3_object_name =\n    \"Demo_VideoRecognition/mp4/\" +\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \".mp4\";\n\n\n// output to debug sidebar\n//node.warn(s3_object_name);\n\n// add to msg to be passed on\nmsg.payload.variables.s3_object_name = s3_object_name;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 1490.5,
            "y": 1096,
            "wires": [
                [
                    "ff00c29e.04a3"
                ]
            ]
        },
        {
            "id": "71c444ff.5ed72c",
            "type": "http in",
            "z": "ceb4606e.993d7",
            "name": "Request from ECSI",
            "url": "/NAB_Demo",
            "method": "put",
            "swaggerDoc": "",
            "x": 172,
            "y": 275,
            "wires": [
                []
            ]
        },
        {
            "id": "5108f288.b05724",
            "type": "http response",
            "z": "ceb4606e.993d7",
            "name": "Return created XML to ECSI",
            "x": 2602.5,
            "y": 503.5,
            "wires": []
        },
        {
            "id": "ac174413.15d6d",
            "type": "switch",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "switch_distribute_Ustream",
            "title": "Decide if to switch to the workflow branch to distribute to Ustream",
            "expected_case": "approved",
            "decision_maker": "DecisionTransformation",
            "fail_on_predecessor_error": "yes",
            "fail_on_error": "yes",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "xslt_file",
                    "v": "/home/dmae/admira/etc/Demo_Flow_VideoRecognition_Switch_Action_Decision.xsl"
                },
                {
                    "k": "action",
                    "v": "distributeUstream"
                },
                {
                    "k": "step_name_task_list_entry",
                    "v": "create_approval_task_list_entry"
                }
            ],
            "x": 1350,
            "y": 1011,
            "wires": [
                [
                    "adf52c26.8b1578"
                ]
            ]
        },
        {
            "id": "969e3926.f6ace8",
            "type": "rest_client",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "register_ustream",
            "title": "Register upload to Ustream",
            "expected_case": "distributeUstream",
            "end_point": "http://$variable.nodered_self_host:1880/ustream",
            "use_case": "POST",
            "media_type": "json",
            "form_type": "multipart",
            "user": "",
            "password": "",
            "source_filename": "",
            "target_filename": "$variable.ustream_target_filename",
            "response_handler": "",
            "step_timeout": "",
            "fail_on_predecessor_error": "yes",
            "fail_on_error": "yes",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [],
            "x": 1924.5,
            "y": 1003.5,
            "wires": [
                [
                    "f48618c1.cfd49"
                ]
            ]
        },
        {
            "id": "adf52c26.8b1578",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "ustream_target_filename",
            "func": "//variable declaration\nvar ustream_target_filename =\n    \"Demo_VideoRecognition/xml/\" +\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \"_ustream_register.xml\";\n\n\n// output to debug sidebar\n//node.warn(ustream_target_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.ustream_target_filename = ustream_target_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 1663,
            "y": 1003,
            "wires": [
                [
                    "969e3926.f6ace8"
                ]
            ]
        },
        {
            "id": "bc856f47.7b3ca8",
            "type": "ecsi_client",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "ftp_subjob",
            "title": "start subjob to transfer file to ustream",
            "expected_case": "distributeUstream",
            "subfunction": "startTemplateJob",
            "primary_ecsi_url": "http://$variable.ecsi_self_host:9090/ecsi/services/admirafunctions",
            "secondary_ecsi_url": "http://$variable.ecsi_self_host:9090/ecsi/services/admirafunctions",
            "remote_userid": "$variable.ecsi_self_user",
            "remote_password": "$variable.ecsi_self_password",
            "remote_database": "admira",
            "template_filename": "/home/dmae/admira/etc/templates-ev/Demo_Flow_Ustream_FTP.xsl",
            "template_variables_filename": "/home/dmae/admira/cache/$variable.ftp_subjob_params_filename",
            "filename": "",
            "mode_synchronous": "yes",
            "fail_on_error": "yes",
            "timeout": "",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "yes",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [],
            "x": 2817,
            "y": 1003,
            "wires": [
                [
                    "16543b9e.c8b3ac"
                ]
            ]
        },
        {
            "id": "89afacb.259115",
            "type": "notify",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "create_parameters_for_ftp_subjob",
            "title": "Create parameters for FTP subjob into file [$variable.ftp_subjob_params_filename]",
            "expected_case": "distributeUstream",
            "dest_filename": "/home/dmae/admira/etc/Demo_Flow_VideoRecognition_Notify_FTP_Subjob_Destination.xml",
            "content_filename": "$variable.ustream_target_filename",
            "org_unit": "$variable.orgunit",
            "metadata_essence_": "",
            "fail_on_predecessor_error": "yes",
            "stop_deliver_on_failure": "yes",
            "fail_on_error": "yes",
            "hold_in_cache": "yes",
            "parameters": [
                {
                    "k": "target_filename",
                    "v": "$variable.ftp_subjob_params_filename"
                }
            ],
            "properties": [
                {
                    "k": "xml_filename",
                    "v": "$variable.ftp_subjob_params_filename"
                },
                {
                    "k": "video_filename",
                    "v": "$variable.mp4_target_filename"
                }
            ],
            "x": 2520.375,
            "y": 1001.375,
            "wires": [
                [
                    "bc856f47.7b3ca8"
                ]
            ]
        },
        {
            "id": "f48618c1.cfd49",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "ftp_subjob_params_filename",
            "func": "//variable declaration\nvar ftp_subjob_params_filename =\n    \"Demo_VideoRecognition/xml/\" +\n    \"ftp_subjob_params\" + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \".xml\";\n\n\n// output to debug sidebar\n//node.warn(ftp_subjob_params_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.ftp_subjob_params_filename = ftp_subjob_params_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 2197.25,
            "y": 1004.5,
            "wires": [
                [
                    "89afacb.259115"
                ]
            ]
        },
        {
            "id": "cf3979b2.1464d8",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "cleversafe_object_name",
            "func": "//variable declaration\nvar cleversafe_object_name =\n    \"Demo_VideoRecognition/mp4/\" +\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \".mp4\";\n\n\n// output to debug sidebar\n//node.warn(cleversafe_object_name);\n\n// add to msg to be passed on\nmsg.payload.variables.cleversafe_object_name = cleversafe_object_name;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 1467.25,
            "y": 1152,
            "wires": [
                [
                    "d77039ca.ba829"
                ]
            ]
        },
        {
            "id": "d77039ca.ba829",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "cleversafe_xml_filename",
            "func": "//variable declaration\nvar cleversafe_xml_filename =\n    \"Demo_VideoRecognition/xml/\" +\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \"_s3_metadata.xml\";\n\n\n// output to debug sidebar\n//node.warn(cleversafe_xml_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.cleversafe_xml_filename = cleversafe_xml_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 1822.25,
            "y": 1174.5,
            "wires": [
                [
                    "5a58a323.044ed4"
                ]
            ]
        },
        {
            "id": "5a58a323.044ed4",
            "type": "notify",
            "z": "ceb4606e.993d7",
            "nop": true,
            "tag": "",
            "name": "create_cleversafe_metadata",
            "title": "Creation of metadata to eb attached to file [$variable.cleversafe_object_name] in S3 bucket",
            "expected_case": "storeCleversafe",
            "dest_filename": "/home/dmae/admira/etc/Demo_Flow_VideoRecognition_Notify_S3_Metadata_Destination.xml",
            "content_filename": "",
            "org_unit": "$variable.orgunit",
            "metadata_essence_": "",
            "fail_on_predecessor_error": "yes",
            "stop_deliver_on_failure": "yes",
            "fail_on_error": "yes",
            "hold_in_cache": "yes",
            "parameters": [
                {
                    "k": "target_filename",
                    "v": "$variable.cleversafe_xml_filename"
                }
            ],
            "properties": [
                {
                    "k": "priority",
                    "v": "medium"
                },
                {
                    "k": "title",
                    "v": "Watson demo: Approval of uploaded clip [$input.sequence_name]"
                },
                {
                    "k": "access",
                    "v": "o=admira"
                },
                {
                    "k": "form_template",
                    "v": "taskView"
                },
                {
                    "k": "step_name_task_list_entry",
                    "v": "create_approval_task_list_entry"
                },
                {
                    "k": "clip_name",
                    "v": "$input.sequence_name"
                },
                {
                    "k": "material_type",
                    "v": "$input.material_type"
                },
                {
                    "k": "upload_remarks",
                    "v": "$input.remark"
                },
                {
                    "k": "video_filename",
                    "v": "$variable.mp4_target_filename"
                },
                {
                    "k": "xml_filename",
                    "v": "$variable.s3_xml_filename"
                }
            ],
            "x": 2443.5,
            "y": 1175.75,
            "wires": [
                [
                    "945ff08f.952898"
                ]
            ]
        },
        {
            "id": "945ff08f.952898",
            "type": "put_to_s3",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "cleversafe",
            "name": "put_to_cleversafe",
            "title": "Store file [$variable.mp4_target_filename] via S3 protocol to Cleversafe as file [$variable.cleversafe_object_name]",
            "expected_case": "storeCleversafe",
            "source_filename": "$variable.mp4_target_filename",
            "target_pool": "POOL_CLEVERSAFE_S3",
            "object_name": "$variable.cleversafe_object_name",
            "metadata_xml_file": "",
            "step_timeout": "",
            "fail_on_predecessor_error": "yes",
            "fail_on_error": "yes",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 3067.25,
            "y": 1150.75,
            "wires": [
                [
                    "16543b9e.c8b3ac"
                ]
            ]
        },
        {
            "id": "5414aa53.f50a74",
            "type": "comment",
            "z": "ceb4606e.993d7",
            "name": "Zugang zu Cleversafe",
            "info": "\n\nVault Name: jm140316\nUsername: jm140316\nPassword: 1C#gibbY\nAccesser IPs: \n    8.40.18.82 (S3)\n    8.40.18.83 (S3)\n    8.40.18.84 (S3)\n    8.40.18.85 (SOH)\n    8.40.18.86 (OS)\nAWS Key ID: Cnv7NdSNlMHOSQ4hadeD\nAWK Secret Key: XuaW40PbIX5JlCK7FiK3BCm8S8CuUCSofq5K8zSc\n\n\nINSERT INTO DMAE.LIBRARY_MANAGERS (MANAGER_ID, LIBRARY_MANAGER_NAME, LIBRARY_MANAGER_TYPE, CONF_FILE_NAME, LIBRARY_MOUNT_POINT, HOST_NAME, USER_NAME, PASSWD, LAST_MODIFIED, CREATION_TIMESTAMP) VALUES (DMAE.LIBRARY_MANAGER_ID.NEXTVAL, 'CLEVERSAFE_S3', 3, 'jm140316', '8.40.18.82', 'localhost', 'Cnv7NdSNlMHOSQ4hadeD', 'XuaW40PbIX5JlCK7FiK3BCm8S8CuUCSofq5K8zSc', CURRENT TIMESTAMP, CURRENT TIMESTAMP)\n\nINSERT INTO DMAE.LIBRARIES (LIBRARY_ID, LIBRARY_NAME, LIBRARY_TYPE, TAPE_COUNT, DRIVE_COUNT, LAST_MODIFIED, CREATION_TIMESTAMP) VALUES (DMAE.LIBRARY_ID.NEXTVAL, 'CLEVERSAFE_S3', 's3', 0, 0, CURRENT TIMESTAMP, CURRENT TIMESTAMP)\n\nINSERT INTO DMAE.POOLS (POOL_ID, LIBRARIES_LIBRARY_ID, POOL_NAME, TAPE_COUNT, POOL_TYPE, RULE_PLACEMENT, RULE_ACCESS, SPREAD_TAPE_FRAME, MAX_FREE_SPACE, MIN_FREE_SPACE, TAPE_TYPE, LAST_MODIFIED, CREATION_TIMESTAMP) VALUES (DMAE.POOL_ID.NEXTVAL, (SELECT LIBRARY_ID FROM DMAE.LIBRARIES WHERE LIBRARY_NAME = 'CLEVERSAFE_S3'), 'POOL_CLEVERSAFE_S3', 0, 's3', 'none', 'none', 0, 0, 0, 8, CURRENT TIMESTAMP, CURRENT TIMESTAMP)\n--> Hier ist ein Fehler drinnen: Die Library manager ID muss nich beim Pool eingetragen werden. LIBRARY_MANAGERS_MANAGER_ID\ndb2 \"update pools set LIBRARY_MANAGERS_MANAGER_ID=2 where pool_id=2\"\n\n",
            "x": 2211,
            "y": 1212,
            "wires": []
        },
        {
            "id": "e53e0566.3829b",
            "type": "subflow:d11a6d02.bbfb68",
            "z": "ceb4606e.993d7",
            "name": "",
            "x": 858.75,
            "y": 78.125,
            "wires": [],
            "subflow": "d11a6d02.bbfb68"
        },
        {
            "id": "588a04bb.7a0ef4",
            "type": "publish_youtube",
            "z": "ceb4606e.993d7",
            "nop": true,
            "tag": "",
            "name": "publish_youtube",
            "title": "$input.sequence_name",
            "expected_case": "distributeYoutube",
            "client_secrets": "/home/dmae/admira/etc/youtube_client_secrets_NAB.json",
            "source_filename": "$variable.mp4_target_filename",
            "privacy": "private",
            "description": "$input.sequence_name $input.remark",
            "credentialsPath": "/tmp/",
            "step_timeout": "",
            "fail_on_predecessor_error": "",
            "fail_on_error": "",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 1905.625,
            "y": 901.875,
            "wires": [
                [
                    "16543b9e.c8b3ac"
                ]
            ]
        },
        {
            "id": "d602e071.761f58",
            "type": "switch",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "switch_distribute_youtube",
            "title": "Decide if to switch to the workflow branch to distribute to Youtube",
            "expected_case": "approved",
            "decision_maker": "DecisionTransformation",
            "fail_on_predecessor_error": "yes",
            "fail_on_error": "yes",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "xslt_file",
                    "v": "/home/dmae/admira/etc/Demo_Flow_VideoRecognition_Switch_Action_Decision.xsl"
                },
                {
                    "k": "action",
                    "v": "distributeYoutube"
                },
                {
                    "k": "step_name_task_list_entry",
                    "v": "create_approval_task_list_entry"
                }
            ],
            "x": 1625,
            "y": 878.75,
            "wires": [
                [
                    "588a04bb.7a0ef4"
                ]
            ]
        },
        {
            "id": "b990d034.107b3",
            "type": "comment",
            "z": "ceb4606e.993d7",
            "name": "Youtube Account",
            "info": "Google Konto: arema.IBM@gmail.com\nPasswort: aremaTest\n\n\nDie hochgeladenen Videos findest du anschließend unter diesem Link (Google Konto muss eingeloggt sein):\nhttps://www.youtube.com/my_videos?o=U\nAnsonsten immer unter YouTube -> Mein Kanal (linke Seite) -> Video-Manager (oben)",
            "x": 2125,
            "y": 906.25,
            "wires": []
        },
        {
            "id": "c977fbcd.c445a8",
            "type": "comment",
            "z": "ceb4606e.993d7",
            "name": "Start cleversafe Agent",
            "info": "mit einkommentierter Zeile in bin/tools\nadmira_agent start put_to_s3 tag cleversafe",
            "x": 187.5,
            "y": 421.25,
            "wires": []
        },
        {
            "id": "167f0ae1.14a535",
            "type": "edi_generic_ftp",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "transfer_to_fraunhofer",
            "title": "Transfer MP4 file [$variable.mp4_target_filename] to Fraunhofer Audio Mining",
            "expected_case": "checkFraunhoferDE",
            "direction": "",
            "device_name": "fraunhofer",
            "input_pipe": "",
            "output_pipe": "",
            "usecase": "PUT_FILE",
            "source_filename": "$variable.mp4_target_filename",
            "target_filename": "$variable.mp4_target_filename_name",
            "org_unit": "$variable.orgunit",
            "login_tries": "",
            "device_retry_order": "",
            "overwrite": "yes",
            "force_unsecure_overwrite": "",
            "ftp_connect_mode": "passive",
            "enable_noncritical_errors": "",
            "chmod_file": "",
            "new_remote_directory": "",
            "remove_remote_directory": "",
            "max_transfer_speed": "",
            "start_frame": "",
            "transfer_size": "",
            "transfer_mode": "",
            "mobid": "",
            "source_mobid": "",
            "format_definition": "",
            "storage_location": "",
            "storage_location_longgop": "",
            "interplay_ws_timeout": "",
            "interplay_tm_device": "",
            "interplay_tm_max_retry": "",
            "media_services_output_filepath": "",
            "avid_priority": "",
            "audio_bit_depth": "",
            "audio_sample_rate": "",
            "transfer_buffer_size": "",
            "network_buffer_size": "",
            "encoding": "",
            "keep_alive_sleep_time": "",
            "device_max_retry": "",
            "source_filename_remote": "",
            "target_filename_remote": "",
            "checksum_algorithm": "",
            "checksum_metadata_field": "",
            "checksum_file": "",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 1012.5,
            "y": 1557.5,
            "wires": [
                [
                    "f6989959.9ded68"
                ]
            ]
        },
        {
            "id": "f6989959.9ded68",
            "type": "speech_to_text",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "call_speech_to_text",
            "title": "Request speech2text from Fraunhofer Audioming Service [https://nm-prototype.iais.fraunhofer.de/audiomining]",
            "expected_case": "checkFraunhoferDE",
            "source_file_uri": "ftp://fraunhofer:ZmZiYTc5ZWZh@159.122.4.146:21/$variable.mp4_target_filename_name",
            "target_filename": "$variable.fraunhofer_result_filename",
            "audio_mining_endpoint": "https://nm-prototype.iais.fraunhofer.de/audiomining",
            "audio_mining_username": "ibm",
            "audio_mining_password": "1bm20!6",
            "asset_title": "$input.sequence_name",
            "max_num_of_err_responses_per_substep": "100",
            "step_timeout": "",
            "fail_on_predecessor_error": "yes",
            "fail_on_error": "yes",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 1981.875,
            "y": 1569.375,
            "wires": [
                [
                    "d9805e5b.1d5b28"
                ]
            ]
        },
        {
            "id": "7c907e17.0c9a7",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "mp4_target_filename_name",
            "func": "//variable declaration\nvar mp4_target_filename_name =\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \".mp4\";\n\n\n// output to debug sidebar\n//node.warn(mp4_target_filename_name);\n\n// add to msg to be passed on\nmsg.payload.variables.mp4_target_filename_name = mp4_target_filename_name;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 747.5,
            "y": 532.5,
            "wires": [
                [
                    "f9a8d399.8d6e8"
                ]
            ]
        },
        {
            "id": "e626c862.8dde28",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "fraunhofer_result_filename",
            "func": "//variable declaration\nvar fraunhofer_result_filename =\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \"_fraunhofer_result.xml\";\n\n\n// output to debug sidebar\n//node.warn(fraunhofer_result_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.fraunhofer_result_filename = fraunhofer_result_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 791.25,
            "y": 997.5,
            "wires": [
                [
                    "f2671c78.082fc"
                ]
            ]
        },
        {
            "id": "a7535d19.bf949",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "solr_target_filename",
            "func": "//variable declaration\nvar solr_target_filename =\n    \"Demo_VideoRecognition/xml/\" +\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \"_report_for_solr.xml\";\n\n\n// output to debug sidebar\n//node.warn(solr_target_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.solr_target_filename = solr_target_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 726.25,
            "y": 680,
            "wires": [
                [
                    "e0926ef6.81b128"
                ]
            ]
        },
        {
            "id": "e0926ef6.81b128",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "vr_target_filename",
            "func": "//variable declaration\nvar vr_target_filename =\n    \"Demo_VideoRecognition/xml/\" +\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \"_VR_report.xml\";\n\n\n// output to debug sidebar\n//node.warn(vr_target_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.vr_target_filename = vr_target_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 736.25,
            "y": 746.25,
            "wires": [
                [
                    "853a4028.70f648"
                ]
            ]
        },
        {
            "id": "c68a10b3.a3961",
            "type": "metadata",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "metadata",
            "title": "Analyse the file metadata and store it in database",
            "expected_case": "",
            "filename": "$variable.mp4_target_filename",
            "file_list": "",
            "stylesheet": "",
            "org_unit": "$variable.orgunit",
            "hold_in_cache": "yes",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 1190.625,
            "y": 450.625,
            "wires": [
                [
                    "4df0e8c9.583028"
                ]
            ]
        },
        {
            "id": "4df0e8c9.583028",
            "type": "mediainfo",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "mediainfo_metadata",
            "title": "MediaInfo Analyze",
            "expected_case": "",
            "source_filename": "$variable.mp4_target_filename",
            "target_filename": "$variable.mediainfo_xml_filename",
            "org_unit": "$variable.orgunit",
            "chmod_file": "",
            "hold_in_cache": "yes",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 1386.875,
            "y": 450.625,
            "wires": [
                [
                    "1581da29.07278e"
                ]
            ]
        },
        {
            "id": "1581da29.07278e",
            "type": "notify",
            "z": "ceb4606e.993d7",
            "nop": false,
            "tag": "",
            "name": "update_database_mediainfo",
            "title": "Update metadata in database",
            "expected_case": "",
            "dest_filename": "/home/dmae/admira/etc/Notify_MI_to_ADMIRA_destinations.xml",
            "content_filename": "$variable.mediainfo_xml_filename",
            "org_unit": "$variable.orgunit",
            "metadata_essence_": "",
            "fail_on_predecessor_error": "yes",
            "stop_deliver_on_failure": "yes",
            "fail_on_error": "yes",
            "hold_in_cache": "yes",
            "parameters": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "properties": [
                {
                    "k": "",
                    "v": ""
                }
            ],
            "x": 1685.625,
            "y": 444.375,
            "wires": [
                [
                    "c6a38ae2.092098"
                ]
            ]
        },
        {
            "id": "a3793403.b381f8",
            "type": "function",
            "z": "ceb4606e.993d7",
            "name": "mediainfo_xml_filename",
            "func": "//variable declaration\nvar mediainfo_xml_filename =\n    \"Demo_VideoRecognition/xml/\" +\n    msg.payload.variables.mp4_label + \n    \"_\" + \n    msg.payload.variables.timestamp + \n    \"_mediainfo_metadata.xml\";\n\n\n// output to debug sidebar\n//node.warn(mediainfo_xml_filename);\n\n// add to msg to be passed on\nmsg.payload.variables.mediainfo_xml_filename = mediainfo_xml_filename;\nreturn msg;",
            "outputs": 1,
            "noerr": 0,
            "x": 1357.5,
            "y": 372.5,
            "wires": [
                [
                    "c68a10b3.a3961"
                ]
            ]
        }
    ]
}
